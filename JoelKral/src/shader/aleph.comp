#version 460
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(binding=0)        uniform sampler2D src;
layout(binding=1, rgba8) uniform image2D   dst;
layout(binding=2)        buffer  Weights {
    float weights[];
};
const int UNIT = 10;

void main() {
    ivec2 pos           = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    vec4 color          = texelFetch(src, pos, 0);
    ivec2 size          = imageSize(dst);
    vec3 current_weight = vec3(0);
    int buffer_pos      = 0;
    for (int x = 0; x < size.x; x++) {
        for (int y = 0; y < size.y; y++) {
            buffer_pos = x/UNIT * (y/UNIT + 1);
            imageStore(dst, ivec2(x,y),
                       vec4(
                       vec3(weights[buffer_pos  ],
                       weights[buffer_pos+1],
                       weights[buffer_pos+2])
                       *    color.xyz,         1));
        }}
}